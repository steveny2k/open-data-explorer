#Set up travis CI

#most helpful article: https://kjaer.io/travis/

#pre installation on local machine
gem install travis
#need to log onto travis ci website
travis login


#generate ssh keys in local repo:
touch .travis.yml
ssh-keygen

#which will prompt something like this:
#Generating public/private rsa key pair.
#Enter file in which to save the key (/Users/Maxime Kjaer/.ssh/id_rsa):
#enter in travis_deploy


#You’ll need to copy your private key file (deploy-key) to your local repository. Then, we’ll install the Travis command line utility, log in, and encrypt the file:
#This command encrypts a copy of your deployment key, travis_rsa.enc. It will also add a few lines to your .travis.yml

travis encrypt-file travis_deploy --add

#after the above runs successfully, delete the private key, you don't need it- and we don't want it getting in the git repo!
rm travis_rsa
#remember to keep the public key- you will need this in a little bit to add to the server.

##Setup Travis on the droplet

#Create a passwordless travis user on the droplet,
#setup the generated access key, and
#give it access to the folder where the website is hosted:
sudo adduser deploy
sudo su deploy
mkdir ~/.ssh
chmod 700 .ssh
chmod 600 .ssh/authorized_keys

#switch back to you local machine and run the below- this is transfering the public key:
cat travis_rsa.pub | ssh deploy@datasfexplorer.tk "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"


#Setting up a remote repo:
#Remote is just a repository on our web server to which we can push.
#We’ll want to push to a repository in /var/www/open-data-explorer/.git, and have the files available in /var/kjaermaxi.me/build. We’re placing the .git one level above public_html because we don’t want to serve it.
#To do this, we’ll start out by creating an empty Git repo in /var/www/open-data-explorer/

#Set up for production
sudo mkdir /var/www/open-data-explorer/:
sudo chown -R deploy:deploy /var/www/open-data-explorer

sudo su deploy
mkdir /var/www/open-data-explorer/.git
cd /var/www/open-data-explorer/.git/
git init --bare
cd hooks

vim post-receive
#Then, you’ll need to coy following in :

#!/bin/sh
git --work-tree=/var/www/open-data-explorer/build/ --git-dir=/var/www/open-data-explorer/.git checkout -f

#change the perms on the post-receive file
chmod +x /var/www/open-data-explorer/.git/hooks/post-receive

#repeat steps for staging:

su superuser #aka user with sudo privs.
sudo mkdir /var/www/staging-open-data-explorer/:
sudo chown -R deploy:deploy /var/www/staging-open-data-explorer

sudo su deploy
mkdir /var/www/staging-open-data-explorer/.git
cd /var/www/staging-open-data-explorer/.git/
git init --bare
cd hooks

vim post-receive
#Then, you’ll need to coy following in :

#!/bin/sh
git --work-tree=/var/www/staging-open-data-explorer/build/ --git-dir=/var/www/staging-open-data-explorer/.git checkout -f

#change the perms on the post-receive file
chmod +x /var/www/staging-open-data-explorer/.git/hooks/post-receive

#now create your .travis yaml file. See the actual yaml file and corresponding bash scripts for configuration.
